#!/usr/bin/env node

const program = require('commander');
const fs = require('fs');
const { exec } = require('child_process');
const path = require('path');
const ejs = require('ejs');

const args = process.argv;
const viewsPath = path.join(__dirname, './client/skins'); // 视图目录
const serverSidePath = path.join(__dirname, './server/routers'); // 控制器目录

program
    .version('1.0.0')
    .option('-n, --module <nameValue>', '要生成的模块名称', value => value)
    .option('-p, --path <pathValue>', '要生成的路由地址', value => value)
    .parse(process.argv);

    const urlPath = program.path;
    const moduleName = program.module;

    if (typeof urlPath === 'undefined') {
        console.error('请输入要生成的模块名称');
        process.exit(0);
    }

    if (typeof moduleName === 'undefined') {
        console.error('请输入要生成的路由地址');
        process.exit(0);
    }

    console.log('generating views...');
    exec(`cp -rf ./build/template/viewTemplate ./client/skins/${moduleName}`, (err) => {
        if(err) {
            throw Error(err);
        }

        console.log('views generated!');
    });

    // console.log('generating routers...');
    exec(`cd ./server/routers && mkdir ${moduleName} && cd ${moduleName}`, (err) => {
        if (err) {
            throw Error(err);
        }

        const tplString = fs.readFileSync(`./build/template/routerTemplate/index.js.template`).toString();
        console.log(tplString);

        fs.writeFileSync(`./server/routers/${moduleName}/index.js`, ejs.render(tplString, {data: { moduleName, urlPath }}));

        console.log('routers generated!');
    });